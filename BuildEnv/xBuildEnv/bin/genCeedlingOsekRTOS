#!/usr/bin/env ruby

require 'docopt'
require 'fileutils'



# Grab just the filename for convenience
NAME = File.basename($0)

# Version information string
VERSION_NUM = "1.0"
VERSION = <<END_VERSION
########################################################################
#  #{NAME} #{VERSION_NUM}
#  Tool for converting OSCAN generated files for ceedling use
#  Copyright (C) 2014 Schrader Electronics
########################################################################
END_VERSION

# Build the options!  Notice that #{VERSION} will include a newline at end
DOC_OPT = <<DOCOPT
#{VERSION}
Usage:
  #{NAME} <tcb_src_dir> <tcb_dest_dir>
  #{NAME} -h | --help
  #{NAME} --version

Options:
  --version           Show version info.
  -h --help           Show this screen.
DOCOPT

#***************************************************************************************************
#   \brief          Main Program
#***************************************************************************************************
# Command Line Support ###############################
if ($0 == __FILE__)

  # Extract options!
  options = {}
  begin
    options = Docopt::docopt(DOC_OPT)
  rescue Docopt::Exit => e
    puts e.message
    exit 1
  end

  # change any relative paths from command line to absolute paths
  gen_src_dir   = File.expand_path(options["<tcb_src_dir>"], Dir.pwd )
  gen_dest_dir  = File.expand_path(options["<tcb_dest_dir>"], Dir.pwd )

  FileUtils.mkdir_p( gen_dest_dir )

  ### Generated files
  Dir.chdir( gen_src_dir ) do
    Dir.glob("*.[cChH]").each do |file|

      case file

      when 'tcb.h'
        outFile = File.new( "#{gen_dest_dir}/#{file}", 'w' )

        File.readlines(file).each do |line|

          if line =~ /define\s+osdCompiler\s+/
            outFile.puts '#define osdCompiler osdCompilerGcc'

          elsif line =~ /define\s+osdFullPreempt\s+/
            outFile.puts '#define osdFullPreempt 0'

          elsif line =~ /define\s+osdMixedPreempt\s+/
            outFile.puts '#define osdMixedPreempt 0'

          elsif line =~ /define\s+osdNonPreempt\s+/
            outFile.puts '#define osdNonPreempt 1'

          elsif line =~ /define\s+osdORTIEnabled\s+/
            outFile.puts '#define osdORTIEnabled 0'

          elsif line =~ /define\s+(osd[PGR]Paged)\s+/
            outFile.puts "#define #{$1} 0"

          elsif line =~ /^\s*@far\s+/
          	outFile.puts $'

          else
          	unless ( line =~ /pragma/ || line =~ /osdSystemStackSize:/ )
          	  outFile.puts line
          	end
          end
        end
        outFile.close

	  ## Copy this file otherwise the other tcb.c will be compiled and include it's local unmodified tcb.h
      when 'tcb.c'
        # already working in destination directory
        FileUtils.cp( file, gen_dest_dir )
      else
      	#No other files need override
      end

    end #Dir.glob
  end #Dir.chdir

  exit 0

end #if ($0 == __FILE__)

